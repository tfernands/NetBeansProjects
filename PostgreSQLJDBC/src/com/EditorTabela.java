/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import com.util.PopulateTable;
import com.util.BDConnection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TERMINAL
 */
public class EditorTabela extends javax.swing.JFrame {
    
    private DefaultComboBoxModel tabelas;
    private DefaultListModel campos;
    private DefaultListModel camposSelecionados;
    private final DefaultTableModel tableModel = new DefaultTableModel();
    
    public EditorTabela() {
        initComponents();
        campos = new DefaultListModel<>();
        camposSelecionados = new DefaultListModel<>();
        tabelas = new DefaultComboBoxModel<>();
        comboBoxTabelas.setModel(tabelas);
        fieldList.setModel(campos);
        selectedFieldList.setModel(camposSelecionados);
        jTable1.setModel(tableModel);
        
        String sql = "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' ORDER BY table_name";
        BDConnection.connect();
        try{
            ResultSet rs = BDConnection.con.createStatement().executeQuery(sql);
            while(rs.next()){
                tabelas.addElement(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditorTabela.class.getName()).log(Level.SEVERE, null, ex);
        }
        BDConnection.close();
    }
    
    public void selectTable(String table_name){
        comboBoxTabelas.setSelectedItem(table_name);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        labelBase = new javax.swing.JLabel();
        comboBoxTabelas = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fieldList = new javax.swing.JList<>();
        selectButton = new javax.swing.JButton();
        deselectButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedFieldList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setTitle("Editar tabela");

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setFocusable(false);

        labelBase.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelBase.setForeground(new java.awt.Color(204, 204, 204));
        labelBase.setText("Tabela");

        comboBoxTabelas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxTabelas.setBorder(null);
        comboBoxTabelas.setOpaque(false);
        comboBoxTabelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxTabelasActionPerformed(evt);
            }
        });

        jButton3.setText("Aplicar");
        jButton3.setOpaque(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelBase)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboBoxTabelas, 0, 331, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBase)
                    .addComponent(comboBoxTabelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.NORTH);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setFocusable(false);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Campos encontrados");

        fieldList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        fieldList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fieldListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(fieldList);

        selectButton.setText(">");
        selectButton.setOpaque(false);
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        deselectButton.setText("<");
        deselectButton.setOpaque(false);
        deselectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deselectButtonActionPerformed(evt);
            }
        });

        selectedFieldList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        selectedFieldList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectedFieldListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(selectedFieldList);

        jLabel2.setText("Campos selecionados");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectButton)
                            .addComponent(deselectButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(selectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deselectButton)
                        .addGap(0, 60, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("Editar", jPanel4);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Visualizar", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addGap(0, 0, 0))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxTabelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxTabelasActionPerformed
        //get table from ExporterConfig
        String tableName = (String)comboBoxTabelas.getSelectedItem();
        ArrayList<String> table = FormExport.getTable(tableName);
        
        String sql = "SELECT column_name FROM information_schema.columns WHERE table_name = '"+tableName+"'";
        campos.clear();
        camposSelecionados.clear();
        BDConnection.connect();
        if (table == null){
            try{
            ResultSet rs = BDConnection.con.createStatement().executeQuery(sql);
            while(rs.next()){
                campos.addElement(rs.getString(1));
            }
            } catch (SQLException ex) {
                Logger.getLogger(EditorTabela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            for (String s: table){
                camposSelecionados.addElement(s);
            }
            try{
            ResultSet rs = BDConnection.con.createStatement().executeQuery(sql);
            while(rs.next()){
                block:{
                    for (String s: table){
                        if (s.equals(rs.getString(1))) break block;
                    }
                    campos.addElement(rs.getString(1));
                }
            }
            } catch (SQLException ex) {
                Logger.getLogger(EditorTabela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        BDConnection.close();
        
        PopulateTable.populate(jTable1, "SELECT * FROM "+tableName);
    }//GEN-LAST:event_comboBoxTabelasActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        ArrayList<String> selected = (ArrayList<String>) fieldList.getSelectedValuesList();
        for (String s: selected){
            campos.removeElement(s);
            camposSelecionados.addElement(s);
        }
    }//GEN-LAST:event_selectButtonActionPerformed

    private void deselectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deselectButtonActionPerformed
        ArrayList<String> selected = (ArrayList<String>) selectedFieldList.getSelectedValuesList();
        for (String s: selected){
            campos.addElement(s);
            camposSelecionados.removeElement(s);
        }
    }//GEN-LAST:event_deselectButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String table_name = (String)comboBoxTabelas.getSelectedItem();
        if (camposSelecionados.isEmpty()){
            FormExport.removeTable(table_name);
        }else{
            ArrayList<String> table;
            if (FormExport.containsTable(table_name)){
                table = FormExport.getTable(table_name);
                table.clear();
                for (int i = 0; i < camposSelecionados.size(); i++){
                    table.add((String) camposSelecionados.get(i));
                }
            }else{
                table = new ArrayList<>();
                for (int i = 0; i < camposSelecionados.size(); i++){
                    table.add((String) camposSelecionados.get(i));
                }
                FormExport.addTable(table_name, table);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void fieldListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fieldListMouseClicked
        if (evt.getClickCount() == 2){
            int index = fieldList.locationToIndex(evt.getPoint());
            selectButton.doClick();
        }
    }//GEN-LAST:event_fieldListMouseClicked

    private void selectedFieldListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectedFieldListMouseClicked
        if (evt.getClickCount() == 2){
            int index = fieldList.locationToIndex(evt.getPoint());
            deselectButton.doClick();
        }
    }//GEN-LAST:event_selectedFieldListMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBoxTabelas;
    private javax.swing.JButton deselectButton;
    private javax.swing.JList<String> fieldList;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelBase;
    private javax.swing.JButton selectButton;
    private javax.swing.JList<String> selectedFieldList;
    // End of variables declaration//GEN-END:variables
}
